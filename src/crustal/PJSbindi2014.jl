

function PJSbindi2014(T::U, M::U, R::U, Vs30::U, Fss::Int64, Fnm::Int64, Frv::Int64,  Rtype::String="Rjb") where U<:Real

    if T > 3.0
        return PJSgroundMotion(NaN, NaN, NaN, NaN, NaN)
    end

    Ti = [-1.0, 0.0, 0.02, 0.04, 0.07, 0.1, 0.15, 0.2, 0.26, 0.3, 0.36, 0.4, 0.46, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.3, 1.5, 1.8, 2.0, 2.6, 3.0 ]

    if Rtype == "Rjb"
        e1 = [2.26481, 3.32819, 3.37053, 3.43922, 3.59651, 3.68638, 3.68632, 3.68262, 3.64314, 3.63985, 3.5748, 3.53006, 3.43387, 3.40554, 3.30442, 3.23882, 3.1537, 3.13481, 3.12474, 2.89841, 2.84727, 2.68016, 2.60171, 2.39067, 2.25399 ]
        c1 = [-1.22408, -1.2398, -1.26358, -1.31025, -1.29051, -1.28178, -1.17697, -1.10301, -1.08527, -1.10591, -1.09955, -1.09538, -1.06586, -1.05767, -1.05014, -1.05021, -1.04654, -1.04612, -1.0527, -0.973828, -0.983388, -0.983082, -0.979215, -0.977532, -0.940373 ]
        c2 = [0.202085, 0.21732, 0.220527, 0.244676, 0.231878, 0.219406, 0.182662, 0.133154, 0.115603, 0.108276, 0.103083, 0.101111, 0.109066, 0.112197, 0.121734, 0.114674, 0.129522, 0.114536, 0.103471, 0.104898, 0.109072, 0.164027, 0.163344, 0.211831, 0.227241 ]
        h = [5.06124, 5.26486, 5.20082, 4.91669, 5.35922, 6.12146, 5.74154, 5.31998, 5.13455, 5.12846, 4.90557, 4.95386, 4.6599, 4.43205, 4.21657, 4.17127, 4.20016, 4.48003, 4.41613, 4.25821, 4.56697, 4.68008, 4.58186, 5.39517, 5.74173 ]
        c3 = [0.0, 0.00118624, 0.00111816, 0.00109183, 0.00182094, 0.00211443, 0.00254027, 0.00242089, 0.00196437, 0.00149922, 0.00104905, 0.000851474, 0.000868165, 0.000788528, 0.000487285, 0.000159408, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]
        b1 = [0.162802, -0.0855045, -0.0890554, -0.116919, -0.0850124, -0.11355, -0.0928726, 0.0100857, 0.0299397, 0.0391904, 0.052103, 0.0458464, 0.0600838, 0.0883189, 0.120182, 0.166933, 0.193817, 0.247547, 0.306569, 0.349119, 0.384546, 0.343663, 0.331747, 0.357514, 0.385526 ]
        b2 = [-0.0926324, -0.0925639, -0.0916152, -0.0783789, -0.0569968, -0.0753325, -0.102433, -0.105184, -0.127173, -0.138578, -0.151385, -0.16209, -0.165897, -0.164108, -0.163325, -0.161112, -0.156553, -0.153819, -0.147558, -0.149483, -0.139867, -0.135933, -0.148282, -0.122539, -0.111445 ]
        b3 = [0.0440301, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0739042, 0.150461, 0.178899, 0.189682, 0.216011, 0.224827, 0.197716, 0.15475, 0.117576, 0.112005, 0.0517285, 0.0815754, 0.0928373, 0.108209, 0.0987372, 0.0, 0.0, 0.0, 0.0 ]
        γ = [-0.529443, -0.301899, -0.294021, -0.241765, -0.207629, -0.173237, -0.202492, -0.291228, -0.354425, -0.39306, -0.453905, -0.492063, -0.564463, -0.596196, -0.667824, -0.73839, -0.794076, -0.821699, -0.826584, -0.845047, -0.8232, -0.778657, -0.769243, -0.769609, -0.732072 ]
        sofN = [-0.00947675, -0.0397695, -0.039236, -0.0377204, -0.0459437, -0.0380528, -0.0267293, -0.0326537, -0.0338438, -0.0372453, -0.0279067, -0.0256309, -0.0186635, -0.0174194, -0.000486417, 0.0112033, 0.0165258, 0.0164493, 0.0263071, 0.0252339, 0.0186738, 0.0113713, 0.00553545, 0.0087346, 0.0229893 ]
        sofR = [0.0400574, 0.0775253, 0.0810516, 0.0797783, 0.0874968, 0.0847103, 0.0678441, 0.0759769, 0.074982, 0.0767011, 0.0697898, 0.0725668, 0.0645993, 0.0602826, 0.0449209, 0.0281506, 0.0203522, 0.0212422, 0.0186043, 0.0223621, 0.0230894, 0.0166882, 0.0198566, 0.0233142, -0.020662 ]
        sofS = [-0.0305805, -0.0377558, -0.0418156, -0.0420579, -0.041553, -0.0466585, -0.0411147, -0.0433232, -0.0411381, -0.0394559, -0.0418832, -0.046936, -0.0459358, -0.0428632, -0.0444345, -0.0393539, -0.0368783, -0.0376913, -0.0449111, -0.0475957, -0.041763, -0.0280594, -0.025392, -0.0320486, -0.00232715 ]
        tau = [0.156062, 0.149977, 0.15867, 0.154621, 0.172785, 0.169691, 0.152902, 0.150055, 0.151209, 0.157946, 0.165436, 0.157728, 0.173005, 0.18082, 0.182233, 0.189396, 0.189074, 0.191986, 0.195026, 0.181782, 0.177752, 0.163242, 0.164958, 0.17028, 0.176546 ]
        phi = [0.277714, 0.282398, 0.282356, 0.291143, 0.291499, 0.301967, 0.305804, 0.300109, 0.302419, 0.297402, 0.294395, 0.296992, 0.291868, 0.289957, 0.292223, 0.289307, 0.288815, 0.293264, 0.297907, 0.306676, 0.316312, 0.326484, 0.329916, 0.320626, 0.314165 ]
        phiS2S = [0.120398, 0.165611, 0.183959, 0.187409, 0.199913, 0.208178, 0.212124, 0.190469, 0.187037, 0.174118, 0.175848, 0.169883, 0.164162, 0.16509, 0.175634, 0.168617, 0.16817, 0.183719, 0.200775, 0.209625, 0.218569, 0.221367, 0.22535, 0.210193, 0.207247 ]
        sig = [0.31856, 0.319753, 0.323885, 0.329654, 0.33886, 0.346379, 0.3419, 0.335532, 0.338114, 0.336741, 0.337694, 0.336278, 0.33929, 0.341717, 0.344388, 0.345788, 0.3452, 0.350517, 0.356067, 0.356504, 0.362835, 0.36502, 0.368857, 0.363037, 0.360373 ]
    elseif Rtype == "Rhyp"
        e1 = [3.24249, 4.27391, 4.3397, 4.46839, 4.5724, 4.55255, 4.51119, 4.49571, 4.49224, 4.51726, 4.46559, 4.46834, 4.3715, 4.34198, -1.37164, 4.14832, 4.09246, 4.08324, 4.07207, 3.77954, 3.69447, 3.45408, 3.38901, 3.06601, 2.89391 ]
        c1 = [-1.57556, -1.57821, -1.60402, -1.68536, -1.63863, -1.57947, -1.4471, -1.37039, -1.36679, -1.40078, -1.40973, -1.42893, -1.40655, -1.39751, 17.7584, -1.37169, -1.37736, -1.38649, -1.38735, -1.27343, -1.26477, -1.27364, -1.28283, -1.23427, -1.16461 ]
        c2 = [0.0791774, 0.108218, 0.103401, 0.126703, 0.123954, 0.125609, 0.0846097, 0.0385358, 0.0129374, 0.00197997, 0.000488761, -0.00909559, 0.00100953, 0.00423803, 0.216704, 0.00226411, 0.008956, -0.00453151, -0.0185458, -0.0137662, -0.00337334, 0.083746, 0.086724, 0.150146, 0.162354 ]
        h = [4.38918, 4.82743, 4.47852, 4.58063, 5.12096, 5.67511, 4.8248, 4.56965, 3.94802, 4.26816, 4.39978, 4.6039, 4.60254, 4.43045, 886.652, 3.00978, 3.15727, 3.4537, 3.3163, 3.04976, 3.65482, 4.59988, 4.95285, 4.45511, 4.62321 ]
        c3 = [0, 0.0000963923, 0.0000263293, 0.0, 0.00072223, 0.00123904, 0.00169202, 0.00158593, 0.00105878, 0.000564819, 0.0000596605, 0.0, 0.0, 0.0, 0.0560598, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]
        b1 = [0.472433, 0.217109, 0.230422, 0.205651, 0.226272, 0.167382, 0.194714, 0.289627, 0.321065, 0.336096, 0.346351, 0.353351, 0.35717, 0.384532, -0.255828, 0.466754, 0.510102, 0.567727, 0.631338, 0.650829, 0.6746, 0.563304, 0.548353, 0.54175, 0.590765 ]
        b2 = [-0.0725484, -0.0682563, -0.0665354, -0.0528102, -0.0298015, -0.0509066, -0.0784507, -0.0815499, -0.104184, -0.115261, -0.127114, -0.137776, -0.142768, -0.140916, -0.121077, -0.138065, -0.13263, -0.127244, -0.121241, -0.129005, -0.119081, -0.117803, -0.129571, -0.103699, -0.0853286 ]
        b3 = [0.436952, 0.352976, 0.363906, 0.323734, 0.311109, 0.348968, 0.448903, 0.533244, 0.596455, 0.612107, 0.600314, 0.621323, 0.589127, 0.543301, 0.0, 0.498126, 0.437529, 0.45811, 0.474982, 0.488244, 0.461122, 0.184126, 0.171017, 0.00930258, 0.0340584 ]
        γ = [-0.508833, -0.293242, -0.286524, -0.232462, -0.195629, -0.168432, -0.194539, -0.270912, -0.323555, -0.363199, -0.430464, -0.467397, -0.531694, -0.555531, -0.457888, -0.698998, -0.757522, -0.786632, -0.791438, -0.803656, -0.780198, -0.749008, -0.744073, -0.744468, -0.693999 ]
        sofN = [-0.0157195, -0.0472145, -0.0469231, -0.0451723, -0.053205, -0.0470393, -0.0363123, -0.0386754, -0.0365771, -0.038065, -0.0285343, -0.0261626, -0.0192819, -0.0175798, 0.0223674, 0.0100027, 0.0150184, 0.0163802, 0.0263957, 0.024922, 0.0191231, 0.0116759, 0.00499277, 0.00602681, 0.0186211 ]
        sofR = [0.0713859, 0.110979, 0.115063, 0.114597, 0.121653, 0.119021, 0.102481, 0.107555, 0.103236, 0.104818, 0.0955093, 0.0971983, 0.090202, 0.0860123, 0.125552, 0.0543876, 0.0458647, 0.0442236, 0.0411366, 0.038329, 0.0386966, 0.029249, 0.0335873, 0.0305081, -0.0189824 ]
        sofS = [-0.055666, -0.0637639, -0.06814, -0.069425, -0.0684477, -0.0719821, -0.0661686, -0.0688793, -0.0666589, -0.0667532, -0.0669749, -0.0710355, -0.0709198, -0.0684321, -0.147934, -0.06439, -0.0608828, -0.0606035, -0.0675319, -0.0632507, -0.0578195, -0.0409247, -0.0385798, -0.0365347, 0.000361328 ]
        tau = [0.193206, 0.145783, 0.154538, 0.158402, 0.169775, 0.165148, 0.145533, 0.144701, 0.156869, 0.165195, 0.164907, 0.165146, 0.181401, 0.189686, 0.259955, 0.20181, 0.211664, 0.225279, 0.238973, 0.212162, 0.208441, 0.203238, 0.205751, 0.190711, 0.183363 ]
        phi = [0.295126, 0.291566, 0.290986, 0.298261, 0.302117, 0.310963, 0.310621, 0.308845, 0.313737, 0.311052, 0.310509, 0.310959, 0.306033, 0.304174, 0.397088, 0.30827, 0.30855, 0.313873, 0.318631, 0.324083, 0.33425, 0.342873, 0.347114, 0.339373, 0.326297 ]
        phiS2S = [0.178867, 0.186662, 0.18825, 0.192664, 0.205229, 0.212643, 0.216313, 0.20204, 0.199484, 0.186722, 0.180734, 0.182064, 0.176797, 0.178065, 0.189183, 0.264361, 0.208994, 0.225906, 0.246861, 0.245588, 0.24415, 0.256308, 0.26183, 0.242015, 0.22865 ]
        sig = [0.352744, 0.325981, 0.329477, 0.337714, 0.346552, 0.352097, 0.343023, 0.341063, 0.350769, 0.352197, 0.351583, 0.352092, 0.355756, 0.358473, 0.474611, 0.368453, 0.374172, 0.386351, 0.398289, 0.387354, 0.393917, 0.398582, 0.403511, 0.389288, 0.374289 ]
    else
        return PJSgroundMotion(NaN, NaN, NaN, NaN, NaN)
    end

    # period independent coefficients
    Mh = 6.75
    Mref = 5.5
    Rref = 1.0
    Vref = 800.0

    if T < 0.0 # PGV requested
        tidHI = tidLO = 1
    elseif T > 4.0
        return PJSgroundMotion(NaN, NaN, NaN, NaN, NaN)
    else
        tidHI = findfirst(Ti .>= T)
        tidLO = findlast(Ti .<= T)
    end

    if tidLO == tidHI
        # we have a known period
        tid = tidHI

        # magnitude scaling
        if M < Mh
            FM = b1[tid]*(M - Mh) + b2[tid]*(M - Mh)^2
        else
            FM = b3[tid]*(M - Mh)
        end

        # distance scaling
        FD = (c1[tid] + c2[tid]*(M - Mref)) * log10( sqrt(R^2 + h[tid]^2)/Rref ) - c3[tid]*(sqrt( R^2 + h[tid]^2 ) - Rref)

        # site scaling
        FS = γ[tid]*log10(Vs30/Vref)

        # style of faulting
        Fsof = Fss*sofS[tid] + Fnm*sofN[tid] + Frv*sofR[tid]

        # median prediction
        logSa = e1[tid] + FM + FD + FS + Fsof
        Sa = exp10(logSa) / 980.665
        lnSa = log(Sa)

        ln10 = log(10.0)
        τ = tau[tid] * ln10
        ϕ = sqrt( (phi[tid] * ln10)^2 + (phiS2S[tid] * ln10)^2 )
        σ = sig[tid] * ln10
    else
        # need to interpolate
        @inbounds TiLO = Ti[tidLO]
        @inbounds TiHI = Ti[tidHI]

        if T > 0.0 && T < 0.02
            # assume that PGA coefficients are really at 0.001s
            Tfrac = log(max(T,0.001)/0.001)/log(TiHI/0.001)
        else
            Tfrac = log(T/TiLO)/log(TiHI/TiLO)
        end

        bindiLO = PJSbindi2014(TiLO, M, R, Vs30, Fss, Fnm, Frv, Rtype)
        bindiHI = PJSbindi2014(TiHI, M, R, Vs30, Fss, Fnm, Frv, Rtype)

        lnSa = bindiLO.lnIM + Tfrac*(bindiHI.lnIM - bindiLO.lnIM)
        Sa = exp(lnSa)

        τ = bindiLO.τ + Tfrac*(bindiHI.τ - bindiLO.τ)
        ϕ = bindiLO.ϕ + Tfrac*(bindiHI.ϕ - bindiLO.ϕ)
        σ = bindiLO.σ + Tfrac*(bindiHI.σ - bindiLO.σ)
    end

    gm = PJSgroundMotion(Sa, lnSa, τ, ϕ, σ)
    return gm
end


function PJSbindi2014(Ti::Vector{U}, M::U, R::U, Vs30::U, Fss::Int64, Fnm::Int64, Frv::Int64, Rtype::String="Rjb") where U<:Real
    predictions = Array{PJSgroundMotion,1}()
    for T in Ti
        push!(predictions, PJSbindi2014(T, M, R, Vs30, Fss, Fnm, Frv, Rtype))
    end
    return predictions
end


function PJSbindi2014(T::U, rup::Rupture{U}, site::Site{U}, Rtype::String="Rjb") where U<:Real
    M = rup.magnitude
    if Rtype == "Rjb"
        R = joyner_boore_distance(rup, site)
    elseif Rtype == "Rhyp"
        R = hypocentral_distance(rup, site)
    else
        return PJSgroundMotion(NaN, NaN, NaN, NaN, NaN)
    end
    Vs30 = vs30(site)
    Fss, Fnm, Frv, Fuk = mechanism(rup)

    return PJSbindi2014(T, M, R, Vs30, Fss, Fnm, Frv, Rtype)
end

function PJSbindi2014(Ti::Vector{U}, rup::Rupture{U}, site::Site{U}, Rtype::String="Rjb") where U<:Real
    predictions = Array{PJSgroundMotion,1}()
    for T in Ti
        push!(predictions, PJSbindi2014(T, rup, site, Rtype))
    end
    return predictions
end
